{"version":3,"sources":["crawler-api/ApiService.js","StockDetail.js","App.js","reportWebVitals.js","index.js"],"names":["fetchStockDetail","stockCodes","fetch","getStockDetailUrl","join","mode","headers","result","json","getProxyServer","getFetchViaProxy","url","this","stockCode","App","props","classNameColor","stock","lastPrice","r","className","sym","id","Component","getStockPrice","a","ApiService","price","setState","alertUp","alertDown","notification","state","map","index","parseFloat","console","log","Notification","window","permission","requestPermission","alert","setInterval","Math","random","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAGe,G,MAAA,CACLA,iBADK,SACYC,GAAa,IAAD,wIACZC,MACf,EAAKC,kBAAkBF,EAAWG,KAAK,MACvC,CACIC,KAAM,OACNC,QAAS,CACL,8BAA8B,OANX,cAC3BC,EAD2B,gBAUlBA,EAAOC,OAVW,sFAanCC,eAdW,WAeP,MAAO,0CAGXC,iBAlBW,SAkBMC,GACb,OAAOC,KAAKH,iBAAmBE,GAGnCR,kBAtBW,SAsBOU,GACd,OAAOD,KAAKF,iBAAiB,qDAAuDG,M,eCvBvEC,E,kDACjB,WAAYC,GAAQ,uCACVA,G,0CAGV,WACI,IAAIC,EAAiB,WAIrB,OAHIJ,KAAKG,MAAME,MAAMC,UAAYN,KAAKG,MAAME,MAAME,IAC9CH,EAAiB,YAGjB,cAAC,WAAD,UACI,qBAAII,UAAWJ,EAAf,UAA4DJ,KAAKG,MAAME,MAAMI,IAA7E,MAAqFT,KAAKG,MAAME,MAAMC,YAAjEN,KAAKG,MAAME,MAAMK,U,GAZrCC,aCEZT,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAqBVS,cAtBmB,sBAsBH,kCAAAC,EAAA,sEACMC,EAAW1B,iBAAiB,CAAC,MAAO,MAAO,MAAO,QADxD,OACR2B,EADQ,OAEZ,EAAKC,SACD,CACID,MAAOA,IAIXE,EAAU,CACV,IAAQ,KACR,IAAQ,KACR,IAAQ,MAGRC,EAAY,CACZ,IAAQ,KACR,IAAQ,KACR,IAAQ,MAERC,EAAe,GACnB,EAAKC,MAAML,MAAMM,KAAI,SAAChB,EAAOiB,GACzB,IAAIhB,EAAYiB,WAAWlB,EAAMC,WAC7BW,EAAQZ,EAAMI,MAAQS,EAAUb,EAAMI,OAASH,EAAYW,EAAQZ,EAAMI,MAAQH,EAAYY,EAAUb,EAAMI,QAC7Ge,QAAQC,IAAInB,GACZkB,QAAQC,IAAKR,EAAQZ,EAAMI,MAC3BU,EAAeA,EAAed,EAAMI,IAAM,IAAMJ,EAAMC,UAAY,SAGtEa,GACA,IAAIO,aAAaP,GA7BT,2CApBZ,EAAKC,MAAQ,CACTL,MAAO,IAKL,iBAAkBY,OAEe,WAA5BD,aAAaE,YACpBF,aAAaG,oBAFbC,MAAM,sDATK,E,qDAiBnB,WACI9B,KAAKY,gBACLmB,YAAY/B,KAAKY,cAAe,O,oBAoCpC,WACI,OACI,cAAC,WAAD,UACI,qBAAKJ,UAAU,QAAf,SACI,6BAEQR,KAAKoB,MAAML,MAAMM,KAAI,SAAChB,EAAOiB,GACzB,OAAO,cAAC,EAAD,CAAiCjB,MAASA,GAAxB2B,KAAKC,uB,GA/D7BtB,aCOlBuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.c630f6dd.chunk.js","sourcesContent":["// eslint-disable-next-line import/no-anonymous-default-export\nimport {val} from \"cheerio/lib/api/attributes\";\n\nexport default {\n    async fetchStockDetail(stockCodes) {\n        let result = await fetch(\n            this.getStockDetailUrl(stockCodes.join(',')),\n            {\n                mode: 'cors',\n                headers: {\n                    'Access-Control-Allow-Origin':'*'\n                }\n            }\n        )\n        return await result.json();\n    },\n\n    getProxyServer() {\n        return \"https://thingproxy.freeboard.io/fetch/\"\n    },\n\n    getFetchViaProxy(url) {\n        return this.getProxyServer() + url;\n    },\n\n    getStockDetailUrl(stockCode) {\n        return this.getFetchViaProxy(\"https://bgapidatafeed.vps.com.vn/getliststockdata/\" + stockCode);\n    }\n}\n","import './App.css';\nimport React, {Component, Fragment} from 'react';\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let classNameColor = 'decrease';\n        if (this.props.stock.lastPrice > this.props.stock.r) {\n            classNameColor = 'increase';\n        }\n        return (\n            <Fragment>\n                <li className={classNameColor} key={ this.props.stock.id }>{this.props.stock.sym} - {this.props.stock.lastPrice}</li>\n\n            </Fragment>\n        );\n    }\n}","import ApiService from \"./crawler-api/ApiService\";\nimport './App.css';\nimport React, {Component, Fragment} from 'react';\nimport StockDetail from \"./StockDetail\";\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            price: []\n        };\n\n\n        // Let's check if the browser supports notifications\n        if (!(\"Notification\" in window)) {\n            alert(\"This browser does not support desktop notification\");\n        } else if (Notification.permission !== \"denied\") {\n            Notification.requestPermission();\n        }\n\n\n    }\n\n    componentDidMount() {\n        this.getStockPrice();\n        setInterval(this.getStockPrice, 1000 * 8);\n    }\n\n    getStockPrice = async () => {\n        let price = await ApiService.fetchStockDetail(['TCB', 'VIB', 'ACB', 'KDH']);\n        this.setState(\n            {\n                price: price\n            }\n        );\n\n        let alertUp = {\n            'TCB' : 51.3,\n            'VIB' : 51.1,\n            'ACB' : 38.7\n        }\n\n        let alertDown = {\n            'TCB' : 50.1,\n            'VIB' : 50.5,\n            'ACB' : 34.7\n        }\n        let notification = '';\n        this.state.price.map((stock, index) => {\n            let lastPrice = parseFloat(stock.lastPrice);\n            if (alertUp[stock.sym] && alertDown[stock.sym] && (lastPrice > alertUp[stock.sym] || lastPrice < alertDown[stock.sym])) {\n                console.log(lastPrice);\n                console.log( alertUp[stock.sym]);\n                notification = notification + stock.sym + ' ' + stock.lastPrice + '\\n';\n            }\n        })\n        if (notification) {\n            new Notification(notification);\n        }\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <div className=\"price\">\n                    <ul>\n                        {\n                            this.state.price.map((stock, index) => {\n                                return <StockDetail key={Math.random()} stock = {stock} />\n                            })\n                        }\n                    </ul>\n                </div>\n            </Fragment>\n        );\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}